{"version":3,"sources":["components/navbar.tsx","components/input.tsx","redux/actions/todos.ts","redux/actions/actionTypes.ts","components/todoItem.tsx","components/noTodos.tsx","components/todoList.tsx","App.tsx","redux/reducers/todo.ts","redux/index.ts","index.tsx"],"names":["Navbar","className","href","Input","useState","value","setValue","dispatch","useDispatch","type","id","placeholder","onChange","event","todoMessage","target","trim","length","onClick","payload","title","Math","random","TodoItem","onDelete","NoTodo","role","TodoList","todos","useSelector","state","todo","onDeleteHandler","deleteTodo","map","key","App","initialState","action","filter","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"4KAYeA,EAVU,WACrB,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,iCACX,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,W,eCoCDC,EAtCS,WAAO,IAAD,EACAC,mBAAiB,IADjB,mBACnBC,EADmB,KACZC,EADY,KAEpBC,EAAWC,cAgBjB,OACI,yBAAKP,UAAU,mDACX,yBAAKA,UAAU,oBACX,2BACIQ,KAAK,OACLR,UAAU,eACVS,GAAG,OACHC,YAAY,iBACZN,MAAOA,EACPO,SAxBhB,SAAyBC,GACrB,IAAMC,EAAcD,EAAME,OAAOV,MACC,IAA9BS,EAAYE,OAAOC,OAIvBX,EAASQ,GAHLR,EAAS,OAuBL,yBAAKL,UAAU,sBACX,4BAAQA,UAAU,mBAAmBiB,QAnBrD,SAAsBL,GACG,IAAjBR,EAAMY,SAGVV,EChB4C,CAChDE,KCJqB,WDKrBU,QAAS,CACLC,MDaiBf,ECZjBK,GAAIW,KAAKC,YDaThB,EAAS,OAcG,WGjBLiB,EATsB,SAAC,GAA2B,IAA1BH,EAAyB,EAAzBA,MAAOV,EAAkB,EAAlBA,GAAIc,EAAc,EAAdA,SAC9C,OACI,wBAAIvB,UAAU,qEACV,uBAAGA,UAAU,WAAWmB,EAAxB,KACA,4BAAQnB,UAAU,iBAAiBiB,QAAS,kBAAMM,EAASd,KAA3D,aCEGe,EAZU,WACrB,OACI,yBAAKxB,UAAU,yBACX,uBAAGA,UAAU,QAAb,yCACA,yBAAKA,UAAU,eAAeyB,KAAK,aCyBhCC,EAxBY,WACvB,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAChDxB,EAAWC,cAEjB,SAASwB,EAAgBtB,GACrBH,EJDkB,SAACG,GAAD,MAAiB,CACvCD,KCXwB,cDYxBU,QAAS,CACLT,OIFSuB,CAAWvB,IAGxB,OACI,oCAEyB,IAAjBkB,EAAMX,QAAgB,kBAAC,EAAD,MAE1B,wBAAIhB,UAAU,cAEN2B,EAAMM,KAAI,SAAAH,GACN,OAAO,kBAAC,EAAD,CAAUI,IAAKJ,EAAKrB,GAAIA,GAAIqB,EAAKrB,GAAIU,MAAOW,EAAKX,MAAOI,SAAUQ,UCNlFI,EAZO,WAClB,OACI,oCACI,kBAAC,EAAD,MACA,yBAAKnC,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,S,cCRVoC,EAAwB,CAAC,CAACjB,MAAO,SAAUV,GAAI,OAqBtCqB,EAnBF,WAA4C,IAA3CD,EAA0C,uDAAlCO,EAAcC,EAAoB,uCACpD,OAAQA,EAAO7B,MACX,ILNoB,cKOhB,OAAO,YACAqB,EAAMS,QAAO,SAAAR,GAAI,OAAIA,EAAKrB,KAAO4B,EAAOnB,QAAQT,OAE3D,ILXiB,WKYb,MAAM,GAAN,mBACOoB,GADP,CAEI,CACIV,MAAOkB,EAAOnB,QAAQC,MACtBV,GAAI4B,EAAOnB,QAAQT,MAG/B,QACI,OAAOoB,IChBHU,cAAgB,CAChCT,SCEMU,EAAQC,YAAYC,GAG1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAQA,GAChB,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.98f4eba4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar: React.FC = () => {\n    return (\n        <div className=\"container\">\n            <nav className=\"navbar navbar-dark bg-primary\">\n                <a className=\"navbar-brand\" href=\"/\">Todo</a>\n            </nav>\n        </div>\n    )\n}\n\nexport default Navbar;\n","import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {addTodo} from \"../redux/actions/todos\";\n\nconst Input: React.FC = () => {\n    const [value, setValue] = useState<string>(\"\")\n    const dispatch = useDispatch()\n    function onChangeHandler(event: React.ChangeEvent<HTMLInputElement>) {\n        const todoMessage = event.target.value\n        if (todoMessage.trim().length === 0) {\n            setValue(\"\")\n            return\n        }\n        setValue(todoMessage)\n    }\n    function onAddHandler(event: React.MouseEvent) {\n        if (value.length === 0) {\n            return\n        }\n        dispatch(addTodo(value))\n        setValue(\"\")\n    }\n    return (\n        <div className=\"input-group pt-3 pb-3 m-auto d-flex flex-column\">\n            <div className=\"input-group mb-3\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"form\"\n                    placeholder=\"Type your todo\"\n                    value={value}\n                    onChange={onChangeHandler}\n                />\n                <div className=\"input-group-append\">\n                    <button className=\"input-group-text\" onClick={onAddHandler}>\n                        Add\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Input","import {ADD_TODO, DELETE_TODO} from \"./actionTypes\";\nimport {IAction} from \"../../interfaces/interfaces\";\n\nexport const addTodo = (title: string): IAction => ({\n    type: ADD_TODO,\n    payload: {\n        title,\n        id: Math.random()\n    }\n})\n\nexport const deleteTodo = (id: number) => ({\n    type: DELETE_TODO,\n    payload: {\n        id\n    }\n})","export const  ADD_TODO = \"ADD_TODO\"\nexport const  DELETE_TODO = \"DELETE_TODO\"","import React from 'react';\n\ntype TodoItem = {\n    title: string;\n    id: number;\n    onDelete(id: number): void\n}\n\nconst TodoItem: React.FC<TodoItem> = ({title, id, onDelete}) => {\n    return (\n        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            <p className=\"p-0 m-0\">{title} </p>\n            <button className=\"btn btn-danger\" onClick={() => onDelete(id)}> Delete</button>\n        </li>\n    )\n}\n\nexport default TodoItem;\n","import React from \"react\";\n\nconst NoTodo: React.FC = () => {\n    return (\n        <div className=\"container text-center\">\n            <p className=\"lead\">Please type your todo in input above!</p>\n            <div className=\"spinner-grow\" role=\"status\">\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default NoTodo","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {IAppState} from \"../interfaces/interfaces\";\nimport TodoItem from \"./todoItem\";\nimport {deleteTodo} from \"../redux/actions/todos\";\nimport NoTodo from \"./noTodos\";\n\nconst TodoList: React.FC = () => {\n    const todos = useSelector((state: IAppState) => state.todo);\n    const dispatch = useDispatch()\n\n    function onDeleteHandler(id: number) {\n        dispatch(deleteTodo(id))\n    }\n\n    return (\n        <>\n            {\n                todos.length === 0 && <NoTodo/>\n            }\n            <ul className=\"list-group\">\n                {\n                    todos.map(todo => {\n                        return <TodoItem key={todo.id} id={todo.id} title={todo.title} onDelete={onDeleteHandler}/>\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nexport default TodoList;\n","import React from 'react';\nimport Navbar from \"./components/navbar\";\nimport Input from \"./components/input\";\nimport TodoList from \"./components/todoList\";\n\nconst App: React.FC = () => {\n    return (\n        <>\n            <Navbar/>\n            <div className=\"container\">\n                <Input/>\n                <TodoList/>\n            </div>\n        </>\n    )\n}\n\nexport default App;\n","import {IAction, ITodo} from \"../../interfaces/interfaces\";\nimport {ADD_TODO, DELETE_TODO} from \"../actions/actionTypes\";\n\nconst initialState: ITodo[] = [{title: \"todo 1\", id: 3565}]\n\nconst todo = (state = initialState, action: IAction) => {\n    switch (action.type) {\n        case DELETE_TODO:\n            return [\n                ...state.filter(todo => todo.id !== action.payload.id)\n            ]\n        case ADD_TODO :\n            return [\n                ...state,\n                {\n                    title: action.payload.title,\n                    id: action.payload.id\n                }\n            ]\n        default:\n            return state\n    }\n}\n\nexport default todo","import {combineReducers} from \"redux\";\nimport todo from \"./reducers/todo\";\n\n\nexport default  combineReducers({\ntodo\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createStore} from \"redux\";\nimport rootReducer from \"./redux\"\nimport {Provider} from \"react-redux\";\n\nconst store = createStore(rootReducer)\n\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}